<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 2012-2014 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
    or packager/legal/LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at packager/legal/LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

--><domain application-root="${com.sun.aas.instanceRoot}/applications" log-root="${com.sun.aas.instanceRoot}/logs" version="10.0">
<security-configurations>
    <authentication-service default="true" name="adminAuth" use-password-credential="true">
      <security-provider name="spcrealm" provider-name="adminSpc" type="LoginModule">
        <login-module-config control-flag="sufficient" module-class="com.sun.enterprise.admin.util.AdminLoginModule" name="adminSpecialLM">
          <property name="config" value="server-config"/>
          <property name="auth-realm" value="admin-realm"/>
        </login-module-config>
      </security-provider>
      <security-provider name="filerealm" provider-name="adminFile" type="LoginModule">
        <login-module-config control-flag="sufficient" module-class="com.sun.enterprise.security.auth.login.FileLoginModule" name="adminFileLM">
          <property name="config" value="server-config"/>
          <property name="auth-realm" value="admin-realm"/>
        </login-module-config>
      </security-provider>
    </authentication-service>
    <authorization-service default="true" name="authorizationService">
      <security-provider name="simpleAuthorization" provider-name="simpleAuthorizationProvider" type="Simple">
        <authorization-provider-config name="simpleAuthorizationProviderConfig" support-policy-deploy="false"/>
      </security-provider>
    </authorization-service>
  </security-configurations>
  <system-applications/>
  <resources>
<jdbc-resource enabled="true" jndi-name="jdbc/sample" object-type="user" pool-name="SamplePool"/>
    <jdbc-resource jndi-name="jdbc/__TimerPool" object-type="system-admin" pool-name="__TimerPool"/>
    <jdbc-resource jndi-name="jdbc/__default" object-type="system-all" pool-name="DerbyPool"/>
    <jdbc-connection-pool datasource-classname="org.apache.derby.jdbc.EmbeddedXADataSource" name="__TimerPool" res-type="javax.sql.XADataSource">
      <property name="databaseName" value="${com.sun.aas.instanceRoot}/lib/databases/ejbtimer"/>
      <property name="connectionAttributes" value=";create=true"/>
    </jdbc-connection-pool>
    <jdbc-connection-pool datasource-classname="org.apache.derby.jdbc.ClientDataSource" is-isolation-level-guaranteed="false" name="DerbyPool" res-type="javax.sql.DataSource">
      <property name="PortNumber" value="1527"/>
      <property name="Password" value="APP"/>
      <property name="User" value="APP"/>
      <property name="serverName" value="localhost"/>
      <property name="DatabaseName" value="sun-appserv-samples"/>
      <property name="connectionAttributes" value=";create=true"/>
    </jdbc-connection-pool>
  <jdbc-connection-pool datasource-classname="org.apache.derby.jdbc.ClientDataSource" is-isolation-level-guaranteed="false" name="SamplePool" res-type="javax.sql.DataSource">
<property name="User" value="app"/>
<property name="DatabaseName" value="sample"/>
<property name="serverName" value="localhost"/>
<property name="PortNumber" value="1527"/>
<property name="URL" value="jdbc:derby://localhost:1527/sample"/>
<property name="Password" value="app"/>
</jdbc-connection-pool>
</resources>
  <servers>
    <server config-ref="server-config" name="server">
      <resource-ref ref="jdbc/__TimerPool"/>
      <resource-ref ref="jdbc/__default"/>
<resource-ref enabled="true" ref="jdbc/sample"/>
    </server>
  </servers>
  <nodes>
    <node install-dir="${com.sun.aas.productRoot}" name="localhost-domain1" node-host="localhost" type="CONFIG"/>
  </nodes>
 <configs>
   <config name="server-config">
      <system-property description="Port Number that JMS Service will listen for remote clients connection." name="JMS_PROVIDER_PORT" value="7676"/>
      
      <http-service>
        <access-log/>
        <virtual-server id="server" network-listeners="http-listener-1,http-listener-2"/>
        <virtual-server id="__asadmin" network-listeners="admin-listener"/>
      </http-service>
      <iiop-service>
        <orb use-thread-pool-ids="thread-pool-1"/>
        <iiop-listener address="0.0.0.0" id="orb-listener-1" lazy-init="true" port="3700"/>
        <iiop-listener address="0.0.0.0" id="SSL" port="3820" security-enabled="true">
          <ssl cert-nickname="s1as" classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl"/>
        </iiop-listener>
        <iiop-listener address="0.0.0.0" id="SSL_MUTUALAUTH" port="3920" security-enabled="true">
          <ssl cert-nickname="s1as" classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" client-auth-enabled="true"/>
        </iiop-listener>
      </iiop-service>
      <admin-service auth-realm-name="admin-realm" system-jmx-connector-name="system" type="das-and-server">
        <jmx-connector address="0.0.0.0" auth-realm-name="admin-realm" name="system" port="8686" security-enabled="false"/>
        <property name="adminConsoleContextRoot" value="/admin"/>
        <property name="adminConsoleDownloadLocation" value="${com.sun.aas.installRoot}/lib/install/applications/admingui.war"/>
        <property name="ipsRoot" value="${com.sun.aas.installRoot}/.."/>
      </admin-service>
      <connector-service shutdown-timeout-in-seconds="30">
      </connector-service>
       <transaction-service tx-log-dir="${com.sun.aas.instanceRoot}/logs"/>
       <diagnostic-service/>
      <security-service>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="admin-realm">
          <property name="file" value="${com.sun.aas.instanceRoot}/config/admin-keyfile"/>
          <property name="jaas-context" value="fileRealm"/>
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="file">
          <property name="file" value="${com.sun.aas.instanceRoot}/config/keyfile"/>
          <property name="jaas-context" value="fileRealm"/>
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm" name="certificate"/>
        <jacc-provider name="default" policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl" policy-provider="com.sun.enterprise.security.provider.PolicyWrapper">
          <property name="repository" value="${com.sun.aas.instanceRoot}/generated/policy"/>
        </jacc-provider>
        <jacc-provider name="simple" policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory" policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider"/>
        <audit-module classname="com.sun.enterprise.security.ee.Audit" name="default">
          <property name="auditOn" value="false"/>
        </audit-module>
        <message-security-config auth-layer="SOAP">
          <provider-config class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule" provider-id="XWS_ClientProvider" provider-type="client">
            <request-policy auth-source="content"/>
            <response-policy auth-source="content"/>
            <property name="encryption.key.alias" value="s1as"/>
            <property name="signature.key.alias" value="s1as"/>
            <property name="dynamic.username.password" value="false"/>
            <property name="debug" value="false"/>
          </provider-config>
          <provider-config class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule" provider-id="ClientProvider" provider-type="client">
            <request-policy auth-source="content"/>
            <response-policy auth-source="content"/>
            <property name="encryption.key.alias" value="s1as"/>
            <property name="signature.key.alias" value="s1as"/>
            <property name="dynamic.username.password" value="false"/>
            <property name="debug" value="false"/>
            <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"/>
          </provider-config>
          <provider-config class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule" provider-id="XWS_ServerProvider" provider-type="server">
            <request-policy auth-source="content"/>
            <response-policy auth-source="content"/>
            <property name="encryption.key.alias" value="s1as"/>
            <property name="signature.key.alias" value="s1as"/>
            <property name="debug" value="false"/>
          </provider-config>
          <provider-config class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule" provider-id="ServerProvider" provider-type="server">
            <request-policy auth-source="content"/>
            <response-policy auth-source="content"/>
            <property name="encryption.key.alias" value="s1as"/>
            <property name="signature.key.alias" value="s1as"/>
            <property name="debug" value="false"/>
            <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"/>
          </provider-config>
        </message-security-config>
        <message-security-config auth-layer="HttpServlet">
            <provider-config class-name="org.glassfish.admingui.common.security.AdminConsoleAuthModule" provider-id="GFConsoleAuthModule" provider-type="server">
                <request-policy auth-source="sender"/>
                <response-policy/>
                <property name="loginPage" value="/login.jsf"/>
                <property name="loginErrorPage" value="/loginError.jsf"/>
            </provider-config>
        </message-security-config>
	<property name="default-digest-algorithm" value="SHA-256"/>
      </security-service>
      <java-config classpath-suffix="" debug-options="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=9009" system-classpath="">
        <jvm-options>-XX:MaxPermSize=192m</jvm-options>
        <jvm-options>-client</jvm-options>
        <jvm-options>-Djava.awt.headless=true</jvm-options>
        <jvm-options>-Djdk.corba.allowOutputStreamSubclass=true</jvm-options>
        <jvm-options>-Djavax.xml.accessExternalSchema=all</jvm-options>
        <jvm-options>-Djavax.management.builder.initial=com.sun.enterprise.v3.admin.AppServerMBeanServerBuilder</jvm-options>
        <jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
        <jvm-options>-Djava.endorsed.dirs=${com.sun.aas.installRoot}/modules/endorsed${path.separator}${com.sun.aas.installRoot}/lib/endorsed</jvm-options>
        <jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy</jvm-options>
        <jvm-options>-Djava.security.auth.login.config=${com.sun.aas.instanceRoot}/config/login.conf</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.security.httpsOutboundKeyAlias=s1as</jvm-options>
        <jvm-options>-Xmx512m</jvm-options>
        <jvm-options>-Djavax.net.ssl.keyStore=${com.sun.aas.instanceRoot}/config/keystore.jks</jvm-options>
        <jvm-options>-Djavax.net.ssl.trustStore=${com.sun.aas.instanceRoot}/config/cacerts.jks</jvm-options>
        <jvm-options>-Djava.ext.dirs=${com.sun.aas.javaRoot}/lib/ext${path.separator}${com.sun.aas.javaRoot}/jre/lib/ext${path.separator}${com.sun.aas.instanceRoot}/lib/ext</jvm-options>
        <jvm-options>-Djdbc.drivers=org.apache.derby.jdbc.ClientDriver</jvm-options>
		<jvm-options>-DANTLR_USE_DIRECT_CLASS_LOADING=true</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory</jvm-options>
        <!-- Configure post startup bundle list here. This is a comma separated list of bundle sybolic names. -->
        <jvm-options>-Dorg.glassfish.additionalOSGiBundlesToStart=org.apache.felix.shell,org.apache.felix.gogo.runtime,org.apache.felix.gogo.shell,org.apache.felix.gogo.command,org.apache.felix.shell.remote,org.apache.felix.fileinstall</jvm-options>
        <!-- Configuration of various third-party OSGi bundles like
             Felix Remote Shell, FileInstall, etc. -->
        <!-- Port on which remote shell listens for connections.-->
        <jvm-options>-Dosgi.shell.telnet.port=6666</jvm-options>
        <!-- How many concurrent users can connect to this remote shell -->
        <jvm-options>-Dosgi.shell.telnet.maxconn=1</jvm-options>
        <!-- From which hosts users can connect -->
        <jvm-options>-Dosgi.shell.telnet.ip=127.0.0.1</jvm-options>
        <!-- Gogo shell configuration -->
        <jvm-options>-Dgosh.args=--nointeractive</jvm-options>
        <!-- Directory being watched by fileinstall. -->
        <jvm-options>-Dfelix.fileinstall.dir=${com.sun.aas.installRoot}/modules/autostart/</jvm-options>
        <!-- Time period fileinstaller thread in ms. -->
        <jvm-options>-Dfelix.fileinstall.poll=5000</jvm-options>
        <!-- log level: 1 for error, 2 for warning, 3 for info and 4 for debug. -->
        <jvm-options>-Dfelix.fileinstall.log.level=2</jvm-options>
        <!-- should new bundles be started or installed only? 
             true => start, false => only install 
        -->
        <jvm-options>-Dfelix.fileinstall.bundles.new.start=true</jvm-options>
        <!-- should watched bundles be started transiently or persistently -->
        <jvm-options>-Dfelix.fileinstall.bundles.startTransient=true</jvm-options>
        <!-- Should changes to configuration be saved in corresponding cfg file? false: no, true: yes
             If we don't set false, everytime server starts from clean osgi cache, the file gets rewritten.
        -->
        <jvm-options>-Dfelix.fileinstall.disableConfigSave=false</jvm-options>
        <!-- End of OSGi bundle configurations -->
        <jvm-options>-XX:NewRatio=2</jvm-options>
        <!-- Woodstox property needed to pass StAX TCK -->
        <jvm-options>-Dcom.ctc.wstx.returnNullForDefaultNamespace=true</jvm-options>
      </java-config>
      <network-config>
        <protocols>
          <protocol name="http-listener-1">
            <http default-virtual-server="server" max-connections="250">
              <file-cache enabled="false"/>
            </http>
          </protocol>
          <protocol name="http-listener-2" security-enabled="true">
            <http default-virtual-server="server" max-connections="250">
              <file-cache enabled="false"/>
            </http>
            <ssl cert-nickname="s1as" classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" ssl3-enabled="false"/>
          </protocol>
          <protocol name="admin-listener">
            <http default-virtual-server="__asadmin" encoded-slash-enabled="true" max-connections="250">
              <file-cache enabled="false"/>
            </http>
          </protocol>
        </protocols>
        <network-listeners>
          <network-listener name="http-listener-1" port="8080" protocol="http-listener-1" thread-pool="http-thread-pool" transport="tcp"/>
          <network-listener name="http-listener-2" port="8181" protocol="http-listener-2" thread-pool="http-thread-pool" transport="tcp"/>
          <network-listener name="admin-listener" port="4848" protocol="admin-listener" thread-pool="admin-thread-pool" transport="tcp"/>
        </network-listeners>
        <transports>
          <transport name="tcp"/>
        </transports>
      </network-config>
      <thread-pools>
          <thread-pool max-queue-size="256" max-thread-pool-size="50" name="admin-thread-pool"/>
          <thread-pool max-queue-size="4096" name="http-thread-pool"/>
          <thread-pool max-thread-pool-size="200" name="thread-pool-1"/>
      </thread-pools>
    </config>
     <config dynamic-reconfiguration-enabled="true" name="default-config">
         <http-service>
             <access-log/>
             <virtual-server id="server" network-listeners="http-listener-1, http-listener-2">
                 <property name="default-web-xml" value="${com.sun.aas.instanceRoot}/config/default-web.xml"/>
             </virtual-server>
             <virtual-server id="__asadmin" network-listeners="admin-listener"/>
         </http-service>
         <iiop-service>
             <orb use-thread-pool-ids="thread-pool-1"/>
             <iiop-listener address="0.0.0.0" id="orb-listener-1" port="${IIOP_LISTENER_PORT}"/>
             <iiop-listener address="0.0.0.0" id="SSL" port="${IIOP_SSL_LISTENER_PORT}" security-enabled="true">
                 <ssl cert-nickname="s1as" classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl"/>
             </iiop-listener>
             <iiop-listener address="0.0.0.0" id="SSL_MUTUALAUTH" port="${IIOP_SSL_MUTUALAUTH_PORT}" security-enabled="true">
                 <ssl cert-nickname="s1as" classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" client-auth-enabled="true"/>
             </iiop-listener>
         </iiop-service>
         <admin-service system-jmx-connector-name="system" type="server">
             <!-- JSR 160  "system-jmx-connector" -->
             <jmx-connector address="0.0.0.0" auth-realm-name="admin-realm" name="system" port="${JMX_SYSTEM_CONNECTOR_PORT}" protocol="rmi_jrmp" security-enabled="false"/>
             <!-- JSR 160  "system-jmx-connector" -->
             <property name="adminConsoleDownloadLocation" value="${com.sun.aas.installRoot}/lib/install/applications/admingui.war"/>
         </admin-service>
         <web-container>
             <session-config>
                 <session-manager>
                     <manager-properties/>
                     <store-properties/>
                 </session-manager>
                 <session-properties/>
             </session-config>
         </web-container>
         <ejb-container session-store="${com.sun.aas.instanceRoot}/session-store">
             <ejb-timer-service/>
         </ejb-container>
         <mdb-container/>
         <jms-service addresslist-behavior="priority" default-jms-host="default_JMS_host" type="EMBEDDED">
             <jms-host admin-password="admin" admin-user-name="admin" host="localhost" lazy-init="true" name="default_JMS_host" port="${JMS_PROVIDER_PORT}"/>
         </jms-service>
         <log-service file="${com.sun.aas.instanceRoot}/logs/server.log" log-rotation-limit-in-bytes="2000000">
             <module-log-levels/>
         </log-service>
         <security-service>
             <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="admin-realm">
                 <property name="file" value="${com.sun.aas.instanceRoot}/config/admin-keyfile"/>
                 <property name="jaas-context" value="fileRealm"/>
             </auth-realm>
             <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="file">
                 <property name="file" value="${com.sun.aas.instanceRoot}/config/keyfile"/>
                 <property name="jaas-context" value="fileRealm"/>
             </auth-realm>
             <auth-realm classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm" name="certificate"/>
             <jacc-provider name="default" policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl" policy-provider="com.sun.enterprise.security.provider.PolicyWrapper">
                 <property name="repository" value="${com.sun.aas.instanceRoot}/generated/policy"/>
             </jacc-provider>
             <jacc-provider name="simple" policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory" policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider"/>
             <audit-module classname="com.sun.enterprise.security.ee.Audit" name="default">
                 <property name="auditOn" value="false"/>
             </audit-module>
             <message-security-config auth-layer="SOAP">
                 <provider-config class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule" provider-id="XWS_ClientProvider" provider-type="client">
                     <request-policy auth-source="content"/>
                     <response-policy auth-source="content"/>
                     <property name="encryption.key.alias" value="s1as"/>
                     <property name="signature.key.alias" value="s1as"/>
                     <property name="dynamic.username.password" value="false"/>
                     <property name="debug" value="false"/>
                 </provider-config>
                 <provider-config class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule" provider-id="ClientProvider" provider-type="client">
                     <request-policy auth-source="content"/>
                     <response-policy auth-source="content"/>
                     <property name="encryption.key.alias" value="s1as"/>
                     <property name="signature.key.alias" value="s1as"/>
                     <property name="dynamic.username.password" value="false"/>
                     <property name="debug" value="false"/>
                     <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"/>
                 </provider-config>
                 <provider-config class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule" provider-id="XWS_ServerProvider" provider-type="server">
                     <request-policy auth-source="content"/>
                     <response-policy auth-source="content"/>
                     <property name="encryption.key.alias" value="s1as"/>
                     <property name="signature.key.alias" value="s1as"/>
                     <property name="debug" value="false"/>
                 </provider-config>
                 <provider-config class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule" provider-id="ServerProvider" provider-type="server">
                     <request-policy auth-source="content"/>
                     <response-policy auth-source="content"/>
                     <property name="encryption.key.alias" value="s1as"/>
                     <property name="signature.key.alias" value="s1as"/>
                     <property name="debug" value="false"/>
                     <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"/>
                 </provider-config>
             </message-security-config>
         </security-service>
         <transaction-service automatic-recovery="true" tx-log-dir="${com.sun.aas.instanceRoot}/logs"/>
         <diagnostic-service/>
         <java-config classpath-suffix="" debug-options="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${JAVA_DEBUGGER_PORT}" system-classpath="">
             <jvm-options>-XX:MaxPermSize=192m</jvm-options>
             <jvm-options>-server</jvm-options>
             <jvm-options>-Djava.awt.headless=true</jvm-options>
             <jvm-options>-Djdk.corba.allowOutputStreamSubclass=true</jvm-options>
             <jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
             <jvm-options>-Djava.endorsed.dirs=${com.sun.aas.installRoot}/modules/endorsed${path.separator}${com.sun.aas.installRoot}/lib/endorsed</jvm-options>
             <jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy</jvm-options>
             <jvm-options>-Djava.security.auth.login.config=${com.sun.aas.instanceRoot}/config/login.conf</jvm-options>
             <jvm-options>-Dcom.sun.enterprise.security.httpsOutboundKeyAlias=s1as</jvm-options>
             <jvm-options>-Djavax.net.ssl.keyStore=${com.sun.aas.instanceRoot}/config/keystore.jks</jvm-options>
             <jvm-options>-Djavax.net.ssl.trustStore=${com.sun.aas.instanceRoot}/config/cacerts.jks</jvm-options>
             <jvm-options>-Djava.ext.dirs=${com.sun.aas.javaRoot}/lib/ext${path.separator}${com.sun.aas.javaRoot}/jre/lib/ext${path.separator}${com.sun.aas.instanceRoot}/lib/ext</jvm-options>
             <jvm-options>-Djdbc.drivers=org.apache.derby.jdbc.ClientDriver</jvm-options>
             <jvm-options>-DANTLR_USE_DIRECT_CLASS_LOADING=true</jvm-options>
             <jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory</jvm-options>
             <jvm-options>-XX:NewRatio=2</jvm-options>
             <jvm-options>-Xmx512m</jvm-options>
             <!-- Configure post startup bundle list here. This is a comma separated list of bundle sybolic names.
                  The remote shell bundle has been disabled for cluster and remote instances. -->
             <jvm-options>-Dorg.glassfish.additionalOSGiBundlesToStart=org.apache.felix.shell,org.apache.felix.gogo.runtime,org.apache.felix.gogo.shell,org.apache.felix.gogo.command,org.apache.felix.fileinstall</jvm-options>
             <!-- Port on which remote shell listens for connections.-->
             <jvm-options>-Dosgi.shell.telnet.port=${OSGI_SHELL_TELNET_PORT}</jvm-options>
             <!-- How many concurrent users can connect to this remote shell -->
             <jvm-options>-Dosgi.shell.telnet.maxconn=1</jvm-options>
             <!-- From which hosts users can connect -->
             <jvm-options>-Dosgi.shell.telnet.ip=127.0.0.1</jvm-options>
             <!-- Gogo shell configuration -->
             <jvm-options>-Dgosh.args=--noshutdown -c noop=true</jvm-options>
             <!-- Directory being watched by fileinstall. -->
             <jvm-options>-Dfelix.fileinstall.dir=${com.sun.aas.installRoot}/modules/autostart/</jvm-options>
             <!-- Time period fileinstaller thread in ms. -->
             <jvm-options>-Dfelix.fileinstall.poll=5000</jvm-options>
             <!-- log level: 1 for error, 2 for warning, 3 for info and 4 for debug. -->
             <jvm-options>-Dfelix.fileinstall.log.level=3</jvm-options>
             <!-- should new bundles be started or installed only?
                 true => start, false => only install
             -->
             <jvm-options>-Dfelix.fileinstall.bundles.new.start=true</jvm-options>
             <!-- should watched bundles be started transiently or persistently -->
             <jvm-options>-Dfelix.fileinstall.bundles.startTransient=true</jvm-options>
             <!-- Should changes to configuration be saved in corresponding cfg file? false: no, true: yes
                  If we don't set false, everytime server starts from clean osgi cache, the file gets rewritten.
             -->
             <jvm-options>-Dfelix.fileinstall.disableConfigSave=false</jvm-options>
             <!-- End of OSGi bundle configurations -->
        </java-config>
         <availability-service>
             <web-container-availability/>
             <ejb-container-availability sfsb-store-pool-name="jdbc/hastore"/>
             <jms-availability/>
         </availability-service>
         <network-config>
             <protocols>
                 <protocol name="http-listener-1">
                     <http default-virtual-server="server">
                         <file-cache/>
                     </http>
                 </protocol>
                 <protocol name="http-listener-2" security-enabled="true">
                     <http default-virtual-server="server">
                         <file-cache/>
                     </http>
                     <ssl cert-nickname="s1as" classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" ssl3-enabled="false"/>
                 </protocol>
                 <protocol name="admin-listener">
                     <http default-virtual-server="__asadmin" max-connections="250">
                         <file-cache enabled="false"/>
                     </http>
                 </protocol>
                 <protocol name="sec-admin-listener" security-enabled="true">
                   <http default-virtual-server="__asadmin" encoded-slash-enabled="true">
                     <file-cache/>
                   </http>
                   <ssl cert-nickname="glassfish-instance" classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" client-auth="want" renegotiate-on-client-auth-want="false" ssl3-enabled="false"/>
                 </protocol>
                 <protocol name="admin-http-redirect">
                   <http-redirect secure="true"/>
                 </protocol>
                 <protocol name="pu-protocol">
                   <port-unification>
                     <protocol-finder classname="org.glassfish.grizzly.config.portunif.HttpProtocolFinder" name="http-finder" protocol="sec-admin-listener"/>
                     <protocol-finder classname="org.glassfish.grizzly.config.portunif.HttpProtocolFinder" name="admin-http-redirect" protocol="admin-http-redirect"/>
                   </port-unification>
                 </protocol>

             </protocols>
             <network-listeners>
                 <network-listener address="0.0.0.0" name="http-listener-1" port="${HTTP_LISTENER_PORT}" protocol="http-listener-1" thread-pool="http-thread-pool" transport="tcp"/>
                 <network-listener address="0.0.0.0" name="http-listener-2" port="${HTTP_SSL_LISTENER_PORT}" protocol="http-listener-2" thread-pool="http-thread-pool" transport="tcp"/>
                 <network-listener name="admin-listener" port="${ASADMIN_LISTENER_PORT}" protocol="pu-protocol" thread-pool="http-thread-pool" transport="tcp"/>
             </network-listeners>
             <transports>
                 <transport name="tcp"/>
             </transports>
         </network-config>
         <thread-pools>
             <thread-pool name="http-thread-pool"/>
             <thread-pool idle-thread-timeout-in-seconds="120" max-thread-pool-size="200" name="thread-pool-1"/>
         </thread-pools>
         <group-management-service/>
         <system-property description="Port Number that JMS Service will listen for remote clients connection." name="JMS_PROVIDER_PORT" value="27676"/>
         <system-property name="ASADMIN_LISTENER_PORT" value="24848"/>
         <system-property name="HTTP_LISTENER_PORT" value="28080"/>
         <system-property name="HTTP_SSL_LISTENER_PORT" value="28181"/>
         <system-property name="IIOP_LISTENER_PORT" value="23700"/>
         <system-property name="IIOP_SSL_LISTENER_PORT" value="23820"/>
         <system-property name="IIOP_SSL_MUTUALAUTH_PORT" value="23920"/>
         <system-property name="JMX_SYSTEM_CONNECTOR_PORT" value="28686"/>
         <system-property name="OSGI_SHELL_TELNET_PORT" value="26666"/>
         <system-property name="JAVA_DEBUGGER_PORT" value="29009"/>
     </config>
  </configs>
  <property name="administrative.domain.name" value="domain1"/>
  <secure-admin special-admin-indicator="718fe3ff-df18-49f8-84a0-3aeedb3250db">
      <secure-admin-principal dn="CN=localhost,OU=GlassFish,O=Oracle Corporation,L=Santa Clara,ST=California,C=US"/>
      <secure-admin-principal dn="CN=localhost-instance,OU=GlassFish,O=Oracle Corporation,L=Santa Clara,ST=California,C=US"/>
  </secure-admin>
</domain>
